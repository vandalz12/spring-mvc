package org.guestbook.domain;

import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class GuestExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table guests
     *
     * @mbggenerated Mon Aug 20 14:43:53 ICT 2018
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table guests
     *
     * @mbggenerated Mon Aug 20 14:43:53 ICT 2018
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table guests
     *
     * @mbggenerated Mon Aug 20 14:43:53 ICT 2018
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table guests
     *
     * @mbggenerated Mon Aug 20 14:43:53 ICT 2018
     */
    public GuestExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table guests
     *
     * @mbggenerated Mon Aug 20 14:43:53 ICT 2018
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table guests
     *
     * @mbggenerated Mon Aug 20 14:43:53 ICT 2018
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table guests
     *
     * @mbggenerated Mon Aug 20 14:43:53 ICT 2018
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table guests
     *
     * @mbggenerated Mon Aug 20 14:43:53 ICT 2018
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table guests
     *
     * @mbggenerated Mon Aug 20 14:43:53 ICT 2018
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table guests
     *
     * @mbggenerated Mon Aug 20 14:43:53 ICT 2018
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table guests
     *
     * @mbggenerated Mon Aug 20 14:43:53 ICT 2018
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table guests
     *
     * @mbggenerated Mon Aug 20 14:43:53 ICT 2018
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table guests
     *
     * @mbggenerated Mon Aug 20 14:43:53 ICT 2018
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table guests
     *
     * @mbggenerated Mon Aug 20 14:43:53 ICT 2018
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table guests
     *
     * @mbggenerated Mon Aug 20 14:43:53 ICT 2018
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value.getTime()), property);
        }

        protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                dateList.add(new java.sql.Date(iter.next().getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
        }

        public Criteria andGuestIdIsNull() {
            addCriterion("guest_id is null");
            return (Criteria) this;
        }

        public Criteria andGuestIdIsNotNull() {
            addCriterion("guest_id is not null");
            return (Criteria) this;
        }

        public Criteria andGuestIdEqualTo(String value) {
            addCriterion("guest_id =", value, "guestId");
            return (Criteria) this;
        }

        public Criteria andGuestIdNotEqualTo(String value) {
            addCriterion("guest_id <>", value, "guestId");
            return (Criteria) this;
        }

        public Criteria andGuestIdGreaterThan(String value) {
            addCriterion("guest_id >", value, "guestId");
            return (Criteria) this;
        }

        public Criteria andGuestIdGreaterThanOrEqualTo(String value) {
            addCriterion("guest_id >=", value, "guestId");
            return (Criteria) this;
        }

        public Criteria andGuestIdLessThan(String value) {
            addCriterion("guest_id <", value, "guestId");
            return (Criteria) this;
        }

        public Criteria andGuestIdLessThanOrEqualTo(String value) {
            addCriterion("guest_id <=", value, "guestId");
            return (Criteria) this;
        }

        public Criteria andGuestIdLike(String value) {
            addCriterion("guest_id like", value, "guestId");
            return (Criteria) this;
        }

        public Criteria andGuestIdNotLike(String value) {
            addCriterion("guest_id not like", value, "guestId");
            return (Criteria) this;
        }

        public Criteria andGuestIdIn(List<String> values) {
            addCriterion("guest_id in", values, "guestId");
            return (Criteria) this;
        }

        public Criteria andGuestIdNotIn(List<String> values) {
            addCriterion("guest_id not in", values, "guestId");
            return (Criteria) this;
        }

        public Criteria andGuestIdBetween(String value1, String value2) {
            addCriterion("guest_id between", value1, value2, "guestId");
            return (Criteria) this;
        }

        public Criteria andGuestIdNotBetween(String value1, String value2) {
            addCriterion("guest_id not between", value1, value2, "guestId");
            return (Criteria) this;
        }

        public Criteria andGuestNameIsNull() {
            addCriterion("guest_name is null");
            return (Criteria) this;
        }

        public Criteria andGuestNameIsNotNull() {
            addCriterion("guest_name is not null");
            return (Criteria) this;
        }

        public Criteria andGuestNameEqualTo(String value) {
            addCriterion("guest_name =", value, "guestName");
            return (Criteria) this;
        }

        public Criteria andGuestNameNotEqualTo(String value) {
            addCriterion("guest_name <>", value, "guestName");
            return (Criteria) this;
        }

        public Criteria andGuestNameGreaterThan(String value) {
            addCriterion("guest_name >", value, "guestName");
            return (Criteria) this;
        }

        public Criteria andGuestNameGreaterThanOrEqualTo(String value) {
            addCriterion("guest_name >=", value, "guestName");
            return (Criteria) this;
        }

        public Criteria andGuestNameLessThan(String value) {
            addCriterion("guest_name <", value, "guestName");
            return (Criteria) this;
        }

        public Criteria andGuestNameLessThanOrEqualTo(String value) {
            addCriterion("guest_name <=", value, "guestName");
            return (Criteria) this;
        }

        public Criteria andGuestNameLike(String value) {
            addCriterion("guest_name like", value, "guestName");
            return (Criteria) this;
        }

        public Criteria andGuestNameNotLike(String value) {
            addCriterion("guest_name not like", value, "guestName");
            return (Criteria) this;
        }

        public Criteria andGuestNameIn(List<String> values) {
            addCriterion("guest_name in", values, "guestName");
            return (Criteria) this;
        }

        public Criteria andGuestNameNotIn(List<String> values) {
            addCriterion("guest_name not in", values, "guestName");
            return (Criteria) this;
        }

        public Criteria andGuestNameBetween(String value1, String value2) {
            addCriterion("guest_name between", value1, value2, "guestName");
            return (Criteria) this;
        }

        public Criteria andGuestNameNotBetween(String value1, String value2) {
            addCriterion("guest_name not between", value1, value2, "guestName");
            return (Criteria) this;
        }

        public Criteria andAddressIsNull() {
            addCriterion("address is null");
            return (Criteria) this;
        }

        public Criteria andAddressIsNotNull() {
            addCriterion("address is not null");
            return (Criteria) this;
        }

        public Criteria andAddressEqualTo(String value) {
            addCriterion("address =", value, "address");
            return (Criteria) this;
        }

        public Criteria andAddressNotEqualTo(String value) {
            addCriterion("address <>", value, "address");
            return (Criteria) this;
        }

        public Criteria andAddressGreaterThan(String value) {
            addCriterion("address >", value, "address");
            return (Criteria) this;
        }

        public Criteria andAddressGreaterThanOrEqualTo(String value) {
            addCriterion("address >=", value, "address");
            return (Criteria) this;
        }

        public Criteria andAddressLessThan(String value) {
            addCriterion("address <", value, "address");
            return (Criteria) this;
        }

        public Criteria andAddressLessThanOrEqualTo(String value) {
            addCriterion("address <=", value, "address");
            return (Criteria) this;
        }

        public Criteria andAddressLike(String value) {
            addCriterion("address like", value, "address");
            return (Criteria) this;
        }

        public Criteria andAddressNotLike(String value) {
            addCriterion("address not like", value, "address");
            return (Criteria) this;
        }

        public Criteria andAddressIn(List<String> values) {
            addCriterion("address in", values, "address");
            return (Criteria) this;
        }

        public Criteria andAddressNotIn(List<String> values) {
            addCriterion("address not in", values, "address");
            return (Criteria) this;
        }

        public Criteria andAddressBetween(String value1, String value2) {
            addCriterion("address between", value1, value2, "address");
            return (Criteria) this;
        }

        public Criteria andAddressNotBetween(String value1, String value2) {
            addCriterion("address not between", value1, value2, "address");
            return (Criteria) this;
        }

        public Criteria andGuestDateIsNull() {
            addCriterion("guest_date is null");
            return (Criteria) this;
        }

        public Criteria andGuestDateIsNotNull() {
            addCriterion("guest_date is not null");
            return (Criteria) this;
        }

        public Criteria andGuestDateEqualTo(Date value) {
            addCriterionForJDBCDate("guest_date =", value, "guestDate");
            return (Criteria) this;
        }

        public Criteria andGuestDateNotEqualTo(Date value) {
            addCriterionForJDBCDate("guest_date <>", value, "guestDate");
            return (Criteria) this;
        }

        public Criteria andGuestDateGreaterThan(Date value) {
            addCriterionForJDBCDate("guest_date >", value, "guestDate");
            return (Criteria) this;
        }

        public Criteria andGuestDateGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("guest_date >=", value, "guestDate");
            return (Criteria) this;
        }

        public Criteria andGuestDateLessThan(Date value) {
            addCriterionForJDBCDate("guest_date <", value, "guestDate");
            return (Criteria) this;
        }

        public Criteria andGuestDateLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("guest_date <=", value, "guestDate");
            return (Criteria) this;
        }

        public Criteria andGuestDateIn(List<Date> values) {
            addCriterionForJDBCDate("guest_date in", values, "guestDate");
            return (Criteria) this;
        }

        public Criteria andGuestDateNotIn(List<Date> values) {
            addCriterionForJDBCDate("guest_date not in", values, "guestDate");
            return (Criteria) this;
        }

        public Criteria andGuestDateBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("guest_date between", value1, value2, "guestDate");
            return (Criteria) this;
        }

        public Criteria andGuestDateNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("guest_date not between", value1, value2, "guestDate");
            return (Criteria) this;
        }

        public Criteria andGuestIdLikeInsensitive(String value) {
            addCriterion("upper(guest_id) like", value.toUpperCase(), "guestId");
            return (Criteria) this;
        }

        public Criteria andGuestNameLikeInsensitive(String value) {
            addCriterion("upper(guest_name) like", value.toUpperCase(), "guestName");
            return (Criteria) this;
        }

        public Criteria andAddressLikeInsensitive(String value) {
            addCriterion("upper(address) like", value.toUpperCase(), "address");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table guests
     *
     * @mbggenerated do_not_delete_during_merge Mon Aug 20 14:43:53 ICT 2018
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table guests
     *
     * @mbggenerated Mon Aug 20 14:43:53 ICT 2018
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}